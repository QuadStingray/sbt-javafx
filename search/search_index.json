{"docs":[{"location":"/index.html","text":"","title":"sbt-javafx"},{"location":"/index.html#sbt-javafx","text":"","title":"sbt-javafx"},{"location":"/index.html#build-informations","text":"","title":"Build Informations"},{"location":"/index.html#maven","text":"sbt-javafx is deployed on bintray (jcenter).","title":"maven"},{"location":"/index.html#licence","text":"Apache 2 License.","title":"Licence"},{"location":"/index.html#todos-","text":"Tests Documentation","title":"Todos:"},{"location":"/enable_the_plugin.html","text":"","title":"Quick Start"},{"location":"/enable_the_plugin.html#quick-start","text":"","title":"Quick Start"},{"location":"/enable_the_plugin.html#enable-the-plugin","text":"Add an plugins.sbt to the project’s project directory, with the following content:\naddSbtPlugin(\"com.quadstingray\" % \"sbt-javafx\" % \"1.0.0\")\nAdd to build.sbt file:\nenablePlugins(JavaFxPlugin)","title":"Enable the Plugin"},{"location":"/enable_the_plugin.html#some-basic-settings","text":"","title":"Some basic settings"},{"location":"/enable_the_plugin.html#javafxmainclass","text":"Once the plugin is activated in the build.sbt, the build task can be used with the default values. Without extra configuration the TaskKey mainClass is used for the JavaFx application. But it is also possible to set the main class separately in the build.sbt:\njavaFxMainClass := \"com.example.MainClass\"","title":"javaFxMainClass"},{"location":"/enable_the_plugin.html#javafxverbose","text":"By default the Plugin doesn’t log any information about the running build. If you want an visual response while building the application you can enable logging to sbt console:\njavaFxVerbose := false","title":"javaFxVerbose"},{"location":"/sbt_tasks.html","text":"","title":"SBT Tasks"},{"location":"/sbt_tasks.html#sbt-tasks","text":"","title":"SBT Tasks"},{"location":"/sbt_tasks.html#javafxpackage","text":"This is the main task you use to build your application and build it into the desired native packages. The task uses the two tasks listed below to build the application. The packaged application you can find inside target/<scala-version>/<artifact-name>/, e.g. target/scala-2.12/my_javafx_application_2.12.4-1.0.2/. (It is possible to customize the name of the directory.)\nsbt javaFxPackage","title":"javaFxPackage"},{"location":"/sbt_tasks.html#javafxpreparebuild","text":"First the sbt task compile is executed, then the file build.xml is created in the compile target directory based on the settings. You can use the task to debug and check the build.xml.\nsbt javaFxPrepareBuild","title":"javaFxPrepareBuild"},{"location":"/sbt_tasks.html#javafxrunbuild","text":"Build the JavaFx application based on the generated build.xml and compiled *.class files.\nsbt javaFxRunBuild\nManually edit build.xml To experiment with JavaFX packaging options that are not (yet) supported by the plugin, you can manually edit the intermediate version of the build.xml file.","title":"javaFxRunBuild"},{"location":"/settings/index.html","text":"","title":"List of all possible Settings"},{"location":"/settings/index.html#list-of-all-possible-settings","text":"Tip SBT has no limit to use only a single .sbt build settings file for your project. Instead, the settings of all the .sbt files in the root of the project are combined. It’s a good idea to leave the path configuration settings in a separate file as the main build file and to exclude that file from version control, especially if you collaborate with others in the project or compile on different machines for other reasons. The paths may not be equal. (Note that SBT seems to load the .sbt files in alphabetical order, which is sometimes important …)","title":"List of all possible Settings"},{"location":"/settings/index.html#build-process-settings","text":"javaFxNativeBundles javaFxPkgResourcesDir javaFxDevKit javaFxJavaOnly javaFxArtifactName javaFxPostProcess javaFxCssToBin javaFxVerbose javaFxTemplate","title":"Build Process Settings"},{"location":"/settings/index.html#application-settings","text":"javaFxMainClass javaFxVendor javaFxTitle javaFxAppVersion javaFxCategory javaFxDescription javaFxCopyright javaFxLicense javaFxWidth javaFxHeight javaFxEmbeddedWidth javaFxEmbeddedHeight javaFxFileAssociations","title":"Application Settings"},{"location":"/settings/index.html#signing-settings","text":"javaFxPermissions javaFxKeyStore javaFxStorePass javaFxSigningAlias javaFxSigningKeyPass javaFxSigningKeyStoreType","title":"Signing Settings"},{"location":"/settings/index.html#platform-settings","text":"javaFxJavafx javaFxJ2se javaFxJvmargs javaFxJvmuserargs javaFxProperties","title":"Platform Settings"},{"location":"/settings/build_settings.html","text":"","title":"Build Process Settings"},{"location":"/settings/build_settings.html#build-process-settings","text":"","title":"Build Process Settings"},{"location":"/settings/build_settings.html#jdk-or-sdk","text":"Self-contained applications must be packaged with the JDK version of the JRE, not the stand-alone JRE. (On Windows, you probably have both installed if you have the JDK installed.) If you try to use the JRE version, you will get the error message “jvm.dll not found”. By default the plugin use the JAVA_HOME to choose the JDK.\nDefault: JDK(System.getProperty(“java.home”) + “/..”)\nIndividual JDK\njavaFxDevKit := JDK(\"/path/to/individual/jdk\")\nIndividual SDK\njavaFxDevKit := SDK(\"/path/to/individual/sdk\")","title":"JDK or SDK"},{"location":"/settings/build_settings.html#log-build-output-to-console","text":"To debug the packaging process, set javaFxVerbose := true in your build.sbt file. Default the value is false","title":"Log Build Output to Console"},{"location":"/settings/build_settings.html#java-only-application","text":"If the JavaFx application does not use Scala classes then the option javaFxJavaOnly := true can be set. This option excludes the Scala Standard Jars and the package will be slightly smaller at the end.","title":"Java-only application"},{"location":"/settings/build_settings.html#artifact-name","text":"Pattern: artifact.value.name_scalaVersion.value-projectID.value.revision Default: my_javafx_application_2.12.4-1.0.2\njavaFxArtifactName := List(Some(artifact.value.name), Some(\"_\" + scalaVersion.value), Some(\"-\" + projectID.value.revision)).flatten.mkString","title":"Artifact Name"},{"location":"/settings/build_settings.html#convert-css-to-binary","text":"Used to convert CSS files to binary format for faster processing. See also Oracle JavaFX documentation\njavaFxCssToBin := true","title":"Convert CSS to binary"},{"location":"/settings/build_settings.html#post-process","text":"After successfully building the application, you can run an individual post process, e.g. create a zip file or copy the generated files somewhere…\nExample:\ndef postProcess(): Unit = {\n  println(\"do something\")\n}\n\njavaFxPostProcess := postProcess","title":"Post Process"},{"location":"/settings/build_settings.html#template-settings","text":"Template to preprocess. A template is an HTML file that contains markers to be replaced with the JavaScript or HTML snippets that are required for web deployment. Using templates enables you to deploy your application directly into your own web pages. This simplifies the development process, especially when the application is tightly integrated with the page, for example when the web page uses JavaScript to communicate to the application. https://docs.oracle.com/javase/8/docs/technotes/guides/deploy/javafx_ant_task_reference.html#CIACACDA\n“javafx” is the name of\njavaFxTemplate := TemplateSettings(Some(new sbt.File(\"src/templates/EmbedApp_template.html\")),Some(new sbt.File(\"dest/templates/EmbedApp_template.html\")))","title":"Template Settings"},{"location":"/settings/application_settings.html","text":"","title":"Application Settings"},{"location":"/settings/application_settings.html#application-settings","text":"The following keys allow you to specify additional metadata for the installer and the application manifest. Details can be found in the fx:info JavaFX Ant Task Reference.","title":"Application Settings"},{"location":"/settings/application_settings.html#main-class","text":"Default: (mainClass in Compile).value\njavaFxMainClass := \"com.example.MainClass\"","title":"Main Class"},{"location":"/settings/application_settings.html#vendor","text":"javaFxVendor := \"ABC Inc.\"","title":"Vendor"},{"location":"/settings/application_settings.html#title","text":"Default: name.value\njavaFxTitle := \"My Cool New Application\"","title":"Title"},{"location":"/settings/application_settings.html#app-version","text":"Default: version.value\njavaFxAppVersion := \"1.0.0-BETA\"","title":"App Version"},{"location":"/settings/application_settings.html#category","text":"javaFxCategory := \"Tutorial\"","title":"Category"},{"location":"/settings/application_settings.html#description","text":"Default: description.value\njavaFxDescription := \"What the App does.\"","title":"Description"},{"location":"/settings/application_settings.html#copyright","text":"javaFxCopyright := \"ABC Inc. 2018\"","title":"Copyright"},{"location":"/settings/application_settings.html#license","text":"Default: head of licenses.value\njavaFxLicense := \"Apache-2.0\"","title":"License"},{"location":"/settings/application_settings.html#width","text":"Default: 800\njavaFxWidth := 800","title":"Width"},{"location":"/settings/application_settings.html#height","text":"Default: 800\njavaFxHeight := 800","title":"Height"},{"location":"/settings/application_settings.html#embedded-width","text":"Default: “100%”\njavaFxEmbeddedWidth := \"100%\"","title":"Embedded Width"},{"location":"/settings/application_settings.html#embedded-height","text":"Default: “100%”\njavaFxEmbeddedHeight := \"100%\"","title":"Embedded Height"},{"location":"/settings/application_settings.html#file-associations","text":"Associates file extensions or MIME types with a self-contained application. See also Oracle JavaFX documentation\nimport com.quadstingray.sbt.javafx.model.FileAssociation\n\njavaFxFileAssociations ++= Seq(FileAssociation(\"js\", \"text/javascript\", \"JavaScript Source\"))\n\njavaFxFileAssociations += FileAssociation(\"groovy\", \"\", \"\")","title":"File Associations"},{"location":"/settings/native_bundles.html","text":"","title":"Native Bundles"},{"location":"/settings/native_bundles.html#native-bundles","text":"For creating so-called “native bundles”, that is, self-contained applications which co-bundles the JRE, use this setting:\nDefault: all\njavaFxNativeBundles := bundleString\nbundleString is one of:\nall - create all native bundles available on build platform deb - Debian installer file (Linux only) dmg - MacOS X disk image (MacOS X only) exe - Windows stand-alone installer (Windows only) image - to produce a basic package msi - Windows “installer database” file (Windows only) none - Don’t make native bundle (default) rpm - Redhat Package Manager file (Linux only)\nSee the Oracle JavaFX packaging documentation for possible values and further information.\nPackage `dmg` Currently there is an bug in Java Version 8u162, 9 and 10, so that no dmg can be built. See on stackoverflow.com and Bugdatabase Oracle","title":"Native Bundles"},{"location":"/settings/drop-in_resources.html","text":"","title":"Drop-in Resources"},{"location":"/settings/drop-in_resources.html#drop-in-resources","text":"The native Packages for your platform can be customized. The Ant-Tasks fx:deploy ant-javafx.jar is not very flexible to specify of these “drop-in” resources, so tweaking an installer can be frustrating the first time around. Any encountered problems are likely to be associated with mis-named or mis-located files.\nAt the heart of the process of specifying the location of drop-in resources is ensuring the classpath of the ClassLoader executing fx:deploy can resolve the desired resources. The plugin provides the javaFxPkgResourcesDir setting for prepending a path to the fx:deploy classpath (which is not the same as the SBT classpath or the scalac classpath).\nDefault value:\njavaFxPkgResourcesDir := (baseDirectory.value / \"src/deploy\").getAbsolutePath\nSee the Oracle Java Fx Drop In Resources Documentation for specifics, but the basic structure is package/{macosx,windows,linux}/[drop-in-resources].\nExample of Drop-In Files:\nsrc/deploy/package/macosx/Info.plist for a custom Info.plist file on MacOS X src/deploy/package/macosx/Application Name.icns for a custom Application Icon file on MacOS X src/deploy/package/windows/Application Name.ico for a custom Application Icon on Windows\nFor debugging the build task with output for a list of customizable files use: javaFxVerbose","title":"Drop-in Resources"},{"location":"/settings/platform_settings.html","text":"","title":"Platform Settings"},{"location":"/settings/platform_settings.html#platform-settings","text":"Defines application platform requirements. Oracle JavaFX documentation","title":"Platform Settings"},{"location":"/settings/platform_settings.html#minimum-javafx","text":"Minimum version of JavaFX required by the application. Oracle JavaFX documentation\njavaFxJavafx := Some(\"8.0\")","title":"Minimum JavaFX"},{"location":"/settings/platform_settings.html#minimum-jre","text":"Minimum version of JRE required by the application. Oracle JavaFX documentation\njavaFxJ2se := Some(\"8.0\")","title":"Minimum JRE"},{"location":"/settings/platform_settings.html#jva-args","text":"The JVM argument to be set in the JVM, where the application is executed. Oracle JavaFX documentation\njavaFxJvmargs ++= Seq(\"-Xmx64g\", \"-Dorg.apache.deltaspike.ProjectStage=Production\")","title":"JVA Args"},{"location":"/settings/platform_settings.html#jvm-user-args","text":"The user overridable JVM argument to be set in the JVM, where the application is executed. Oracle JavaFX documentation\njavaFxJvmuserargs += \"-Xmx\" -> \"768m\"","title":"JVM User Args"},{"location":"/settings/platform_settings.html#properties","text":"Optional element and can be used multiple times. Java property to be set in the JVM where the application is executed. Oracle JavaFX documentation\njavaFxProperties += \"mySpecialKey\" -> \"Sample Value\"","title":"Properties"},{"location":"/settings/signing_settings.html","text":"","title":"Signing Settings"},{"location":"/settings/signing_settings.html#signing-settings","text":"Digitally signs an application JAR file with a certificate.\nSigns the JAR file as BLOB. In other words, instead of every entry being signed separately, the JAR file is signed as a single binary object.\nThis is a new signing method in JavaFX. For traditional signing, the standard Ant signjar task should be used. See: Oracle JavaFX documentation","title":"Signing Settings"},{"location":"/settings/signing_settings.html#javafxpermissions","text":"import com.quadstingray.sbt.javafx.model.Permissions\njavaFxPermissions := Permissions(elevated = true, cacheCertificates = false)","title":"javaFxPermissions"},{"location":"/settings/signing_settings.html#keystore","text":"Keystore file name\njavaFxKeyStore := Some(\"path/to/keystore\")","title":"KeyStore"},{"location":"/settings/signing_settings.html#store-password","text":"Password to check integrity of the keystore or unlock the keystore\njavaFxStorePass := Some(\"somepassword\")","title":"Store Password"},{"location":"/settings/signing_settings.html#signing-alias","text":"The alias for the key\njavaFxSigningAlias := Some(\"alias\")","title":"Signing Alias"},{"location":"/settings/signing_settings.html#keypass","text":"Password for the private key\njavaFxSigningKeyPass := Some(\"somekeypass\")","title":"KeyPass"},{"location":"/settings/signing_settings.html#keystore-type","text":"javaFxSigningKeyStoreType := Some(\"jks\")","title":"Keystore type"},{"location":"/examples/index.html","text":"","title":"Examples"},{"location":"/examples/index.html#examples","text":"Simple Example Drop in Resources Drop in Resources file-association","title":"Examples"},{"location":"/examples/simple.html","text":"","title":"Simple Example"},{"location":"/examples/simple.html#simple-example","text":"","title":"Simple Example"},{"location":"/examples/simple.html#build-sbt","text":"There are two ways to define the MainClass for your JavaFx Application:\nSBT name := \"sbt-javafx-simple\"\n\norganization := \"com.quadstingray\"\n\nversion := \"0.1\"\n\nscalaVersion := \"2.12.4\"\n\nenablePlugins(JavaFxPlugin)\n\nmainClass := Option(\"com.quadstingray.javafx.sample.HelloApp\")\n JavaFX name := \"sbt-javafx-simple\"\n\norganization := \"com.quadstingray\"\n\nversion := \"0.1\"\n\nscalaVersion := \"2.12.4\"\n\nenablePlugins(JavaFxPlugin)\n\njavaFxMainClass := \"com.quadstingray.javafx.sample.HelloApp\"","title":"build.sbt"},{"location":"/examples/simple.html#project-plugin-sbt","text":"addSbtPlugin(\"com.quadstingray\" % \"sbt-javafx\" % \"1.0.0\")","title":"/project/plugin.sbt"},{"location":"/examples/drop-in-resources.html","text":"","title":"Drop-in-Resources"},{"location":"/examples/drop-in-resources.html#drop-in-resources","text":"","title":"Drop-in-Resources"},{"location":"/examples/drop-in-resources.html#add-files-to-directory-for-drop-in","text":"Default name := \"DropInResources\"\n\norganization := \"com.quadstingray\"\n\nversion := \"0.1\"\n\nscalaVersion := \"2.12.4\"\n\nenablePlugins(JavaFxPlugin)\n\nmainClass := Option(\"com.quadstingray.javafx.sample.HelloApp\")\n Changed Directory name := \"DropInResourcesChanged\"\n\norganization := \"com.quadstingray\"\n\nversion := \"0.1\"\n\nscalaVersion := \"2.12.4\"\n\nenablePlugins(JavaFxPlugin)\n\nmainClass := Option(\"com.quadstingray.javafx.sample.HelloApp\")\n\njavaFxPkgResourcesDir := (baseDirectory.value / \"src/change\").getAbsolutePath","title":"Add files to Directory for drop in"},{"location":"/examples/drop-in-resources.html#directory-structure","text":"Default ├── build.sbt\n├── project\n│   ├── build.properties\n│   └── plugins.sbt\n├── src\n│   ├── deploy\n│   │   └── package\n│   │       ├── macosx\n│   │       │   └── DropInResources.icns\n│   │       └── windows\n│   │           └── DropInResources.ico\n│   └── main\n│       └── scala\n│           └── com.quadstingray.javafx.sample\n│               └── hello.scala\n└── test Changed Directory ├── build.sbt\n├── project\n│   ├── build.properties\n│   └── plugins.sbt\n├── src\n│   ├── change\n│   │   └── package\n│   │       ├── macosx\n│   │       │   └── DropInResourcesChanged.icns\n│   │       └── windows\n│   │           └── DropInResourcesChanged.ico\n│   └── main\n│       └── scala\n│           └── com.quadstingray.javafx.sample\n│               └── hello.scala\n└── test","title":"Directory Structure"},{"location":"/examples/drop-in-resources.html#project-plugin-sbt","text":"addSbtPlugin(\"com.quadstingray\" % \"sbt-javafx\" % \"1.0.0\")","title":"/project/plugin.sbt"},{"location":"/examples/licence.html","text":"","title":"Licence Example"},{"location":"/examples/licence.html#licence-example","text":"","title":"Licence Example"},{"location":"/examples/licence.html#build-sbt","text":"There are two ways to define the MainClass for your JavaFx Application:\nSBT name := \"sbt-licences-simple\"\n\norganization := \"com.quadstingray\"\n\nversion := \"0.1\"\n\nscalaVersion := \"2.12.4\"\n\nenablePlugins(JavaFxPlugin)\n\njavaFxMainClass := \"com.quadstingray.javafx.sample.HelloApp\"\n\nlicenses += (\"Apache-2.0\", url(\"https://github.com/QuadStingray/sbt-javafx/blob/master/LICENSE\"))\n JavaFX name := \"javafx-licences-simple\"\n\norganization := \"com.quadstingray\"\n\nversion := \"0.1\"\n\nscalaVersion := \"2.12.4\"\n\nenablePlugins(JavaFxPlugin)\n\njavaFxMainClass := \"com.quadstingray.javafx.sample.HelloApp\"\n\njavaFxLicense := \"Apache-2.0\"","title":"build.sbt"},{"location":"/examples/licence.html#project-plugin-sbt","text":"addSbtPlugin(\"com.quadstingray\" % \"sbt-javafx\" % \"1.0.0\")","title":"/project/plugin.sbt"},{"location":"/examples/file-association.html","text":"","title":"File Association"},{"location":"/examples/file-association.html#file-association","text":"","title":"File Association"},{"location":"/examples/file-association.html#build-sbt","text":"import com.quadstingray.sbt.javafx.model.FileAssociation\n\nname := \"file-association-javafx-simple\"\n\norganization := \"com.quadstingray\"\n\nversion := \"0.1\"\n\nscalaVersion := \"2.12.4\"\n\nenablePlugins(JavaFxPlugin)\n\njavaFxMainClass := \"com.quadstingray.javafx.sample.HelloApp\"\n\njavaFxFileAssociations += FileAssociation(\"avi\", \"video/x-msvideo\", \"AVI Files\")\njavaFxFileAssociations += FileAssociation(\"mov\", \"video/quicktime\", \"Mov Files\")","title":"build.sbt"},{"location":"/examples/file-association.html#project-plugin-sbt","text":"addSbtPlugin(\"com.quadstingray\" % \"sbt-javafx\" % \"1.0.0\")","title":"/project/plugin.sbt"}]}